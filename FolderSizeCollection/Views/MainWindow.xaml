<Window
    x:Class="FolderSizeCollection.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cv="clr-namespace:FolderSizeCollection.Views.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:FolderSizeCollection"
    xmlns:m="clr-namespace:FolderSizeCollection.Models"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="clr-namespace:FolderSizeCollection.Views.UserControls"
    xmlns:vm="clr-namespace:FolderSizeCollection.ViewModels"
    Title="MainWindow"
    Width="800"
    Height="580"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    mc:Ignorable="d">
    <!--
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}">
    -->

    <Window.Resources>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="19" />
            <Setter Property="Height" Value="13" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Width="19"
                            Height="13"
                            Background="Transparent">
                            <!--<Border
                                Width="9"
                                Height="9"
                                BorderBrush="#FF7898B5"
                                BorderThickness="1"
                                CornerRadius="1"
                                SnapsToDevicePixels="true">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset=".2" Color="White" />
                                            <GradientStop Offset="1" Color="#FFC0B7A6" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path
                                    x:Name="ExpandPath"
                                    Margin="1,1,1,1"
                                    Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3                              L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"
                                    Fill="Black" />
                            </Border>-->
                            <Path
                                x:Name="ExpandPath"
                                Margin="1,1,1,1"
                                Data="M 0,0 L 0,10 L 10, 5 Z"
                                Fill="Black"
                                RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX="0.5" ScaleY="0.6" />
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <!--<Setter TargetName="ExpandPath" Property="Data" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />-->
                                <Setter TargetName="ExpandPath" Property="Data" Value="M 0,0 L 10, 0 L 5, 10 Z" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <cv:LevelToIndentConverter x:Key="LevelIndentConverter" />

        <DataTemplate x:Key="CellTemplate_Name">
            <DockPanel>
                <ToggleButton
                    x:Name="Expander"
                    Margin="{Binding Level, Converter={StaticResource LevelIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type uc:TreeListViewItem}}}"
                    ClickMode="Press"
                    IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type uc:TreeListViewItem}}}"
                    Style="{StaticResource ExpandCollapseToggleStyle}" />
                <TextBlock Text="{Binding Text}" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type uc:TreeListViewItem}}}" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <GridViewColumnCollection x:Key="gvcc">
            <GridViewColumn
                Width="400"
                CellTemplate="{StaticResource CellTemplate_Name}"
                Header="フォルダ名" />

            <GridViewColumn Width="150" Header="サイズ（Bytes）">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Size, StringFormat={}{0:#,###}}" TextAlignment="Right" />
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
        </GridViewColumnCollection>


        <Style TargetType="{x:Type uc:TreeListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type uc:TreeListViewItem}">
                        <StackPanel>
                            <Border
                                Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <GridViewRowPresenter
                                    x:Name="PART_Header"
                                    Columns="{StaticResource gvcc}"
                                    Content="{TemplateBinding Header}" />
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Width" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Height" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type uc:TreeListView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type uc:TreeListView}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel>
                                <GridViewHeaderRowPresenter Columns="{StaticResource gvcc}" DockPanel.Dock="Top" />
                                <ItemsPresenter />
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>


    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="100" />
            <RowDefinition Height="*" />
            <RowDefinition Height="45" />
            <RowDefinition Height="80" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style x:Key="ScanImageStyle" TargetType="Path">
                    <Setter Property="Data" Value="M 0,0 L 0,10 L 10,5 Z" />
                    <Setter Property="Fill" Value="Green" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsScanning.Value}" Value="true">
                            <Setter Property="Data" Value="M 0,0 L 10,0 L 10,10 L 0,10 Z" />
                            <Setter Property="Fill" Value="Red" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="ScanTextStyle" TargetType="TextBlock">
                    <Setter Property="Text" Value="Scan" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsScanning.Value}" Value="true">
                            <Setter Property="Text" Value="Stop" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>

            <ComboBox
                x:Name="driveComboBox"
                Width="140"
                Height="60"
                Margin="30,18,10,0"
                VerticalAlignment="Top"
                FontSize="16"
                ItemsSource="{Binding Drives.Value}"
                SelectedItem="{Binding SelectedDrive.Value, Mode=TwoWay}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding Image}" />
                            <TextBlock
                                Margin="10,0,0,0"
                                VerticalAlignment="Center"
                                Text="{Binding Drive}" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button
                Grid.Row="0"
                Width="120"
                Height="60"
                Margin="10,18,0,0"
                VerticalAlignment="Top"
                Command="{Binding ScanDriveCommand}"
                CommandParameter="{Binding SelectedValue, ElementName=driveComboBox}">
                <StackPanel Orientation="Horizontal">
                    <Path
                        x:Name="ScanImage"
                        Width="30"
                        Height="30"
                        Stretch="UniformToFill"
                        Style="{StaticResource ScanImageStyle}" />
                    <TextBlock
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        FontSize="20"
                        Style="{StaticResource ScanTextStyle}" />
                </StackPanel>

            </Button>
        </StackPanel>

        <!--<TreeView
            Grid.Row="1"
            Margin="20,50,20,20">
            <TreeView.Resources>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                </Style>
            </TreeView.Resources>
        </TreeView>-->

        <!--<ListView
            Grid.Row="1"
            Background="{DynamicResource MaterialDesignBackground}"
            Foreground="{DynamicResource MaterialDesignBody}"
            ItemsSource="{Binding TreeSource.Value}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="200" Header="Folder">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TreeView BorderThickness="0" ItemsSource="{Binding Children}">
                                        <TreeView.ItemTemplate>
                                            <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                                <TextBlock Text="{Binding Text}" />
                                            </HierarchicalDataTemplate>
                                        </TreeView.ItemTemplate>
                                    </TreeView>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="SIZE">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Size, StringFormat={}{0} KB}" TextAlignment="Right" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
        -->
        <!--<GridViewColumn Header="Memory">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Size, StringFormat={}{0} MB}" TextAlignment="Right" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>-->
        <!--
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="VerticalContentAlignment" Value="Top" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>-->


        <Border
            Grid.Row="1"
            BorderBrush="Black"
            BorderThickness="1">
            <ScrollViewer Grid.Row="1">
                <uc:TreeListView
                    BorderThickness="0"
                    ItemsSource="{Binding TreeSource.Value}"
                    ScrollViewer.CanContentScroll="True"
                    ScrollViewer.HorizontalScrollBarVisibility="Visible"
                    ScrollViewer.VerticalScrollBarVisibility="Visible">
                    <uc:TreeListView.Resources>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                        </Style>
                    </uc:TreeListView.Resources>
                    <uc:TreeListView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type m:TreeSource}" ItemsSource="{Binding Children}">
                            <TextBlock Text="{Binding Text}" />
                        </HierarchicalDataTemplate>
                    </uc:TreeListView.ItemTemplate>
                </uc:TreeListView>
            </ScrollViewer>
        </Border>

        <Label
            Grid.Row="2"
            BorderThickness="5"
            Content="{Binding Logtext.Value}" />

        <ListBox Grid.Row="3" ItemsSource="{Binding LogList}" ScrollViewer.VerticalScrollBarVisibility="Visible"/>


        <!--<uc:TreeListView Grid.Row="1">

            <uc:TreeListViewItem>
                <uc:TreeListViewItem.Header>
                    <x:Type TypeName="DependencyObject" />
                </uc:TreeListViewItem.Header>

                <uc:TreeListViewItem>
                    <uc:TreeListViewItem.Header>
                        <x:Type TypeName="Visual" />
                    </uc:TreeListViewItem.Header>

                    <uc:TreeListViewItem>
                        <uc:TreeListViewItem.Header>
                            <x:Type TypeName="UIElement" />
                        </uc:TreeListViewItem.Header>

                        <uc:TreeListViewItem>
                            <uc:TreeListViewItem.Header>
                                <x:Type TypeName="FrameworkElement" />
                            </uc:TreeListViewItem.Header>

                            <uc:TreeListViewItem>
                                <uc:TreeListViewItem.Header>
                                    <x:Type TypeName="Control" />
                                </uc:TreeListViewItem.Header>

                                <uc:TreeListViewItem>
                                    <uc:TreeListViewItem.Header>
                                        <x:Type TypeName="ContentControl" />
                                    </uc:TreeListViewItem.Header>

                                    <uc:TreeListViewItem>
                                        <uc:TreeListViewItem.Header>
                                            <x:Type TypeName="ButtonBase" />
                                        </uc:TreeListViewItem.Header>

                                        <uc:TreeListViewItem>
                                            <uc:TreeListViewItem.Header>
                                                <x:Type TypeName="GridViewColumnHeader" />
                                            </uc:TreeListViewItem.Header>
                                        </uc:TreeListViewItem>


                                        <uc:TreeListViewItem>
                                            <uc:TreeListViewItem.Header>
                                                <x:Type TypeName="Button" />
                                            </uc:TreeListViewItem.Header>
                                        </uc:TreeListViewItem>

                                    </uc:TreeListViewItem>

                                    <uc:TreeListViewItem>
                                        <uc:TreeListViewItem.Header>
                                            <x:Type TypeName="HeaderedContentControl" />
                                        </uc:TreeListViewItem.Header>

                                        <uc:TreeListViewItem>
                                            <uc:TreeListViewItem.Header>
                                                <x:Type TypeName="Expander" />
                                            </uc:TreeListViewItem.Header>
                                        </uc:TreeListViewItem>

                                    </uc:TreeListViewItem>

                                    <uc:TreeListViewItem>
                                        <uc:TreeListViewItem.Header>
                                            <x:Type TypeName="StatusBarItem" />
                                        </uc:TreeListViewItem.Header>
                                    </uc:TreeListViewItem>

                                </uc:TreeListViewItem>


                                <uc:TreeListViewItem>
                                    <uc:TreeListViewItem.Header>
                                        <x:Type TypeName="ItemsControl" />
                                    </uc:TreeListViewItem.Header>

                                    <uc:TreeListViewItem>
                                        <uc:TreeListViewItem.Header>
                                            <x:Type TypeName="Selector" />
                                        </uc:TreeListViewItem.Header>

                                        <uc:TreeListViewItem>
                                            <uc:TreeListViewItem.Header>
                                                <x:Type TypeName="ListBox" />
                                            </uc:TreeListViewItem.Header>

                                            <uc:TreeListViewItem>
                                                <uc:TreeListViewItem.Header>
                                                    <x:Type TypeName="ListView" />
                                                </uc:TreeListViewItem.Header>
                                            </uc:TreeListViewItem>

                                        </uc:TreeListViewItem>

                                        <uc:TreeListViewItem>
                                            <uc:TreeListViewItem.Header>
                                                <x:Type TypeName="ComboBox" />
                                            </uc:TreeListViewItem.Header>
                                        </uc:TreeListViewItem>

                                    </uc:TreeListViewItem>

                                    <uc:TreeListViewItem>
                                        <uc:TreeListViewItem.Header>
                                            <x:Type TypeName="HeaderedItemsControl" />
                                        </uc:TreeListViewItem.Header>

                                        <uc:TreeListViewItem>
                                            <uc:TreeListViewItem.Header>
                                                <x:Type TypeName="TreeViewItem" />
                                            </uc:TreeListViewItem.Header>

                                            <uc:TreeListViewItem>
                                                <uc:TreeListViewItem.Header>
                                                    <x:Type TypeName="uc:TreeListViewItem" />
                                                </uc:TreeListViewItem.Header>
                                            </uc:TreeListViewItem>

                                        </uc:TreeListViewItem>

                                    </uc:TreeListViewItem>

                                    <uc:TreeListViewItem>
                                        <uc:TreeListViewItem.Header>
                                            <x:Type TypeName="TreeView" />
                                        </uc:TreeListViewItem.Header>

                                        <uc:TreeListViewItem>
                                            <uc:TreeListViewItem.Header>
                                                <x:Type TypeName="uc:TreeListView" />
                                            </uc:TreeListViewItem.Header>
                                        </uc:TreeListViewItem>

                                    </uc:TreeListViewItem>

                                    <uc:TreeListViewItem>
                                        <uc:TreeListViewItem.Header>
                                            <x:Type TypeName="StatusBar" />
                                        </uc:TreeListViewItem.Header>
                                    </uc:TreeListViewItem>

                                </uc:TreeListViewItem>
                            </uc:TreeListViewItem>

                            <uc:TreeListViewItem >
                                <uc:TreeListViewItem.Header>
                                    <x:Type TypeName="GridViewRowPresenterBase" />
                                </uc:TreeListViewItem.Header>

                                <uc:TreeListViewItem>
                                    <uc:TreeListViewItem.Header>
                                        <x:Type TypeName="GridViewHeaderRowPresenter" />
                                    </uc:TreeListViewItem.Header>
                                </uc:TreeListViewItem>

                                <uc:TreeListViewItem>
                                    <uc:TreeListViewItem.Header>
                                        <x:Type TypeName="GridViewRowPresenter" />
                                    </uc:TreeListViewItem.Header>
                                </uc:TreeListViewItem>

                            </uc:TreeListViewItem>

                        </uc:TreeListViewItem>
                    </uc:TreeListViewItem>
                </uc:TreeListViewItem>

                <uc:TreeListViewItem >
                    <uc:TreeListViewItem.Header>
                        <x:Type TypeName="ViewBase" />
                    </uc:TreeListViewItem.Header>
                    <uc:TreeListViewItem>
                        <uc:TreeListViewItem.Header>
                            <x:Type TypeName="GridView" />
                        </uc:TreeListViewItem.Header>
                    </uc:TreeListViewItem>
                </uc:TreeListViewItem>

                <uc:TreeListViewItem>
                    <uc:TreeListViewItem.Header>
                        <x:Type TypeName="GridViewColumn" />
                    </uc:TreeListViewItem.Header>
                </uc:TreeListViewItem>

            </uc:TreeListViewItem>

            <uc:TreeListViewItem>
                <uc:TreeListViewItem.Header>
                    <x:Type TypeName="GridViewColumnCollection" />
                </uc:TreeListViewItem.Header>
            </uc:TreeListViewItem>

            <uc:TreeListViewItem>
                <uc:TreeListViewItem.Header>
                    <x:Type TypeName="GridViewColumnHeaderRole" />
                </uc:TreeListViewItem.Header>
            </uc:TreeListViewItem>

        </uc:TreeListView>-->

    </Grid>
</Window>
