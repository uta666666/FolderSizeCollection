<metro:MetroWindow
    x:Class="FolderSizeExplorer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:bh="clr-namespace:FolderSizeExplorer.Views.Behaviors"
    xmlns:cv="clr-namespace:FolderSizeExplorer.Views.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:FolderSizeExplorer"
    xmlns:m="clr-namespace:FolderSizeExplorer.Models"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:vm="clr-namespace:FolderSizeExplorer.ViewModels"
    xmlns:xb="http://schemas.microsoft.com/xaml/behaviors"
    x:Name="mainwindow"
    Title="FileSize Explorer"
    Width="800"
    Height="600"
    Dialog:DialogParticipation.Register="{Binding}"
    Background="{DynamicResource MaterialDesignPaper}"
    BorderThickness="0"
    FontFamily="{materialDesign:MaterialDesignFont}"
    GlowBrush="{DynamicResource AccentColorBrush}"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TitleCharacterCasing="Normal"
    WindowTitleBrush="{DynamicResource PrimaryHueDarkBrush}"
    mc:Ignorable="d">
    <Window.Resources>
        <!--  Converter  -->
        <cv:ScanCommandConverter x:Key="ScanCommandConverter" />
        <cv:FileSizeBarWidthConverter x:Key="FileSizeBarWidthConverter" />
        <cv:FileSizeBarHeightConverter x:Key="FileSizeBarHeightConverter" />
        <!--  Behaviors  -->
        <bh:ScanButtonBehavior x:Key="ScanCommandBehavior" />
        <bh:DoubleClickBehavior x:Key="DoubleClickBehavior" />

        <LinearGradientBrush x:Key="SizeGradientStyle" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Offset="0.0" Color="DeepSkyBlue" />
            <GradientStop Offset="0.25" Color="SkyBlue" />
            <GradientStop Offset="0.5" Color="LightSkyBlue" />
            <GradientStop Offset="1.0" Color="White" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="SelectedSizeGradientStyle" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Offset="0.0" Color="#00FFAC" />
            <GradientStop Offset="0.25" Color="#00EBA7" />
            <GradientStop Offset="0.5" Color="#00DFC0" />
            <GradientStop Offset="1.0" Color="#00C9FE" />
        </LinearGradientBrush>
    </Window.Resources>

    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands>
            <ToggleButton
                x:Name="buttonSwitchTheme"
                Margin="10,0,0,0"
                Command="{Binding SwitchThemeCommand}"
                CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Mode=Self}}"
                Style="{StaticResource MaterialDesignSwitchToggleButton}" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>

    <!--  DatContextはコードビハインド側で設定する  -->
    <!--<Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>-->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style x:Key="ScanImageStyle" TargetType="Path">
                        <Setter Property="Data" Value="M 0,0 L 0,10 L 10,5 Z" />
                        <Setter Property="Fill" Value="LightSkyBlue" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsScanning.Value}" Value="true">
                                <Setter Property="Data" Value="M 0,0 L 10,0 L 10,10 L 0,10 Z" />
                                <Setter Property="Fill" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="ScanIconStyle" TargetType="materialDesign:PackIcon">
                        <Setter Property="Kind" Value="Search" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsScanning.Value}" Value="true">
                                <Setter Property="Kind" Value="Stop" />
                                <Setter Property="Foreground" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="ScanTextStyle" TargetType="TextBlock">
                        <Setter Property="Text" Value="Scan" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsScanning.Value}" Value="true">
                                <Setter Property="Text" Value="Stop" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>

                <ComboBox
                    x:Name="driveComboBox"
                    Width="90"
                    Height="30"
                    Margin="10,10,10,0"
                    VerticalAlignment="Top"
                    materialDesign:ComboBoxAssist.ShowSelectedItem="True"
                    FontSize="12"
                    IsEnabled="{Binding IsScanning.Value, Converter={StaticResource InvertBooleanConverter}}"
                    ItemsSource="{Binding Drives}"
                    SelectedItem="{Binding SelectedDrive.Value, Mode=TwoWay}"
                    Style="{StaticResource MaterialDesignComboBox}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image
                                    Width="20"
                                    Height="20"
                                    Source="{Binding Image}" />
                                <TextBlock
                                    Margin="10,0,0,0"
                                    VerticalAlignment="Center"
                                    FontSize="16"
                                    Text="{Binding FullName}" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <Button
                    Grid.Row="0"
                    Width="120"
                    Height="30"
                    Margin="10,10,0,0"
                    VerticalAlignment="Top"
                    materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                    materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsScanning.Value}"
                    materialDesign:ButtonProgressAssist.Value="-1"
                    Style="{StaticResource MaterialDesignFlatDarkBgButton}">
                    <Button.Command>
                        <MultiBinding Converter="{StaticResource ScanCommandConverter}" UpdateSourceTrigger="Explicit">
                            <Binding Path="ScanDriveCommand" />
                            <Binding Path="StopScanDriveCommand" />
                            <Binding Path="IsScanning.Value" />
                        </MultiBinding>
                    </Button.Command>

                    <Button.CommandParameter>
                        <Binding ElementName="driveComboBox" Path="SelectedValue" />
                    </Button.CommandParameter>

                    <StackPanel Orientation="Horizontal">
                        <!--<Path
                            x:Name="ScanImage"
                            Width="16"
                            Height="16"
                            Stretch="UniformToFill"
                            Style="{StaticResource ScanImageStyle}" />-->
                        <materialDesign:PackIcon
                            Width="20"
                            Height="20"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Style="{StaticResource ScanIconStyle}" />
                        <TextBlock
                            Margin="0,0,0,0"
                            VerticalAlignment="Center"
                            FontSize="16"
                            Style="{StaticResource ScanTextStyle}" />
                    </StackPanel>

                    <xb:Interaction.Behaviors>
                        <bh:ScanButtonBehavior IsScanning="{Binding IsScanning.Value, Mode=OneWay}" />
                    </xb:Interaction.Behaviors>
                </Button>
            </StackPanel>
        </Grid>

        <!--<Grid
            Grid.Row="1"
            Margin="10,0,10,10"
            VerticalAlignment="Stretch">
            <Border Background="LightGray" CornerRadius="5">
                <TextBlock
                    Padding="10,0"
                    VerticalAlignment="Center"
                    Text="{Binding SearchDirectory.Value, Mode=OneWay}" />
            </Border>
        </Grid>-->
        <ItemsControl
            x:Name="itemsControlPaths"
            Grid.Row="1"
            Margin="10,0,10,10"
            ItemsSource="{Binding BreadCrumbDictionaries}">

            <ItemsControl.Resources>
                <vm:BindingProxy x:Key="proxy" Data="{Binding}" />
            </ItemsControl.Resources>

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Button
                            Height="30"
                            Padding="5,0"
                            VerticalContentAlignment="Center"
                            Command="{Binding DataContext.MoveFolderCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}}"
                            CommandParameter="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}"
                            Content="{Binding}"
                            Style="{StaticResource MaterialDesignFlatButton}"
                            Tag="{Binding FullName}" />
                        <TextBlock VerticalAlignment="Center" Text="&gt;" />
                    </StackPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Grid Grid.Row="2" Margin="10,0,10,5">
            <ListView
                ItemsSource="{Binding Directories}"
                SelectedItem="{Binding SelectedDirectoryPath.Value, Mode=TwoWay}"
                Tag="{Binding MaxLengthDirectory.Value, Mode=TwoWay}">
                <xb:Interaction.Behaviors>
                    <bh:DoubleClickBehavior Command="{Binding FolderSelectCommand}" />
                </xb:Interaction.Behaviors>

                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem
                            Command="{Binding OpenExplorerCommand}"
                            CommandParameter="{Binding SelectedDirectoryPath.Value}"
                            Header="Open in explorer">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Folders" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding DeleteCommnad}"
                            CommandParameter="{Binding SelectedDirectoryPath.Value}"
                            Header="Delete">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="TrashCan" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ListView.ContextMenu>

                <ListView.View>
                    <GridView>
                        <GridView.Columns>
                            <GridViewColumn Width="25">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type m:FileData}">
                                        <Image
                                            Width="15"
                                            Height="15"
                                            Source="{Binding Image}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="200" DisplayMemberBinding="{Binding Name}">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Command="{Binding SortDirectoryCommand}" CommandParameter="Name">
                                        <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GridViewColumnHeader}}" HorizontalAlignment="Stretch">
                                            <TextBlock
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Text="Name" />
                                            <TextBlock
                                                Margin="0,0,20,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource PrimaryHueMidBrush}"
                                                Text="{Binding DirectoryNameSortMark.Value}" />
                                        </Grid>
                                    </GridViewColumnHeader>
                                </GridViewColumn.Header>
                            </GridViewColumn>

                            <GridViewColumn x:Name="colSize" Width="120">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader
                                        Controls:ControlsHelper.ContentCharacterCasing="Normal"
                                        Command="{Binding SortDirectoryCommand}"
                                        CommandParameter="Length">
                                        <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GridViewColumnHeader}}" HorizontalAlignment="Stretch">
                                            <TextBlock
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Text="Size" />
                                            <TextBlock
                                                Margin="0,0,20,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource PrimaryHueMidBrush}"
                                                Text="{Binding DirectoryLengthSortMark.Value}" />
                                        </Grid>
                                    </GridViewColumnHeader>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type m:FileData}">
                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Canvas>
                                                <Rectangle
                                                    Canvas.Left="0"
                                                    Canvas.Top="0"
                                                    Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Converter={StaticResource FileSizeBarHeightConverter}}">
                                                    <Rectangle.Width>
                                                        <MultiBinding Converter="{StaticResource FileSizeBarWidthConverter}">
                                                            <Binding ElementName="colSize" Path="ActualWidth" />
                                                            <Binding Path="Tag" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListView}" />
                                                            <Binding Path="Length" />
                                                        </MultiBinding>
                                                    </Rectangle.Width>
                                                    <Rectangle.Style>
                                                        <Style TargetType="Rectangle">
                                                            <Setter Property="Fill" Value="{StaticResource SizeGradientStyle}" />
                                                            <Setter Property="Stroke" Value="DeepSkyBlue" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                                    <Setter Property="Fill" Value="{StaticResource SelectedSizeGradientStyle}" />
                                                                    <Setter Property="Stroke" Value="#00FFAC" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Rectangle.Style>
                                                </Rectangle>
                                            </Canvas>
                                            <Label
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center"
                                                HorizontalContentAlignment="Right"
                                                VerticalContentAlignment="Center">
                                                <TextBlock FontWeight="Bold" Text="{Binding LengthKB, StringFormat={}{0:N0} KB}">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="False" />
                                                                        <Condition Binding="{Binding IsChecked, ElementName=buttonSwitchTheme}" Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueMidBrush}" />
                                                                </MultiDataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Label>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="100">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Controls:ControlsHelper.ContentCharacterCasing="Normal" Content="Folders" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding SubDirectoriesCount, StringFormat={}{0:N0}}" TextAlignment="Right" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="100">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Controls:ControlsHelper.ContentCharacterCasing="Normal" Content="Files" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding FilesCount, StringFormat={}{0:N0}}" TextAlignment="Right" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>

        <GridSplitter Grid.Row="3" Height="2" />

        <Grid Grid.Row="4" Margin="10,5,10,0">
            <ListView
                ItemsSource="{Binding Files}"
                SelectedItem="{Binding SelectedFilePath.Value, Mode=TwoWay}"
                Tag="{Binding MaxLengthFile.Value, Mode=TwoWay}">
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem
                            Command="{Binding OpenExplorerCommand}"
                            CommandParameter="{Binding SelectedFilePath.Value}"
                            Header="Open in explorer">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Folders" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding DeleteCommnad}"
                            CommandParameter="{Binding SelectedFilePath.Value}"
                            Header="Delete">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="TrashCan" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ListView.ContextMenu>

                <ListView.View>
                    <GridView>
                        <GridView.Columns>
                            <GridViewColumn Width="25">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type m:FileData}">
                                        <Image
                                            Width="15"
                                            Height="15"
                                            Source="{Binding Image}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="200" DisplayMemberBinding="{Binding Name}">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Command="{Binding SortFileCommand}" CommandParameter="Name">
                                        <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GridViewColumnHeader}}" HorizontalAlignment="Stretch">
                                            <TextBlock
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Text="Name" />
                                            <TextBlock
                                                Margin="0,0,20,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource PrimaryHueMidBrush}"
                                                Text="{Binding FileNameSortMark.Value}" />
                                        </Grid>
                                    </GridViewColumnHeader>
                                </GridViewColumn.Header>
                            </GridViewColumn>

                            <GridViewColumn x:Name="colSizeFile" Width="120">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader
                                        Controls:ControlsHelper.ContentCharacterCasing="Normal"
                                        Command="{Binding SortFileCommand}"
                                        CommandParameter="Length">
                                        <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GridViewColumnHeader}}" HorizontalAlignment="Stretch">
                                            <TextBlock
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Text="Size" />
                                            <TextBlock
                                                Margin="0,0,20,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource PrimaryHueMidBrush}"
                                                Text="{Binding FileLengthSortMark.Value}" />
                                        </Grid>
                                    </GridViewColumnHeader>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type m:FileData}">
                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Canvas>
                                                <Rectangle
                                                    Canvas.Left="0"
                                                    Canvas.Top="0"
                                                    Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Converter={StaticResource FileSizeBarHeightConverter}}">
                                                    <Rectangle.Width>
                                                        <MultiBinding Converter="{StaticResource FileSizeBarWidthConverter}">
                                                            <Binding ElementName="colSizeFile" Path="ActualWidth" />
                                                            <Binding Path="Tag" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListView}" />
                                                            <Binding Path="Length" />
                                                        </MultiBinding>
                                                    </Rectangle.Width>
                                                    <Rectangle.Style>
                                                        <Style TargetType="Rectangle">
                                                            <Setter Property="Fill" Value="{StaticResource SizeGradientStyle}" />
                                                            <Setter Property="Stroke" Value="DeepSkyBlue" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                                    <Setter Property="Fill" Value="{StaticResource SelectedSizeGradientStyle}" />
                                                                    <Setter Property="Stroke" Value="#00FFAC" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Rectangle.Style>
                                                </Rectangle>
                                            </Canvas>
                                            <Label
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center"
                                                HorizontalContentAlignment="Right"
                                                VerticalContentAlignment="Center">
                                                <TextBlock FontWeight="Bold" Text="{Binding LengthKB, StringFormat={}{0:N0} KB}">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="False" />
                                                                        <Condition Binding="{Binding IsChecked, ElementName=buttonSwitchTheme}" Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueMidBrush}" />
                                                                </MultiDataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Label>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="130">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Controls:ControlsHelper.ContentCharacterCasing="Normal" Content="Creation" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding CreationTime, StringFormat={}{0:yyyy/MM/dd HH:mm:ss}}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="130">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Controls:ControlsHelper.ContentCharacterCasing="Normal" Content="LastAccess" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding LastAccesTime, StringFormat={}{0:yyyy/MM/dd HH:mm:ss}}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="130">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Controls:ControlsHelper.ContentCharacterCasing="Normal" Content="LastWrite" />
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding LastWriteTime, StringFormat={}{0:yyyy/MM/dd HH:mm:ss}}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>

        <Grid Grid.Row="5" Margin="0">
            <StatusBar Height="27">
                <DockPanel Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StatusBar}}">
                    <TextBlock
                        Margin="0,0,10,0"
                        DockPanel.Dock="Right"
                        Text="{Binding SelectedDirectoryPath.Value.Length, StringFormat={}{0:N0} Bytes}" />
                    <TextBlock Margin="10,0,10,0" Text="{Binding StatusMessage.Value}" />
                </DockPanel>
            </StatusBar>
        </Grid>
    </Grid>
</metro:MetroWindow>
